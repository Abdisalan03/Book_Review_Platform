// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Admin {
  id        Int      @id @default(autoincrement())
    name      String
  email     String      @unique
  password  String
  createdAt DateTime @default(now())
  books Book[]
}
model User {
  id        Int      @id @default(autoincrement())
  name  String
  email  String @unique
password String
  createdAt DateTime @default(now())
  // Relationships
  activities UserActivity[]
    replies   Reply[]
    review Review[]
    rating Rating[]
}
model Book {
   id        Int     @id @default(autoincrement())
  title     String
  image     String?
  author    String
  year      Int?
  price     Int
  available Boolean @default(true)
  adminId Int
  created DateTime @default(now())
  updated DateTime @default(now())
  admin Admin @relation(fields: [adminId], references: [id])
  // Relationships
  reviews     Review[]
  ratings     Rating[]
  activities UserActivity[]
}
model Review {
  id        Int      @id @default(autoincrement())
review  String
bookId Int
userId Int
  content   String?
  createdAt DateTime @default(now())
  // Relationships
  book      Book     @relation(fields: [bookId], references: [id])
  user      User        @relation(fields: [userId], references: [id])
  replies  Reply[]
  useractivity UserActivity[]

}
model Rating {
  id        Int      @id @default(autoincrement())
  bookId    Int
  rating    Int
  userId Int
  createdAt DateTime @default(now())
  // Relationships
  book      Book     @relation(fields: [bookId], references: [id])
  user      User  @relation(fields: [userId], references: [id])
}
model Reply {
  id        Int      @id @default(autoincrement())
  userId    Int
  reviewId  Int
  content   String
  createdAt DateTime @default(now())
  // Relationships
  user User     @relation(fields: [userId], references: [id])
  review     Review    @relation(fields: [reviewId], references: [id])
}
model UserActivity {
  id        Int      @id @default(autoincrement())
  userId    Int
  bookId    Int?
  reviewId  Int?
  createdAt DateTime @default(now())
  // Relationships
  user      User     @relation(fields: [userId], references: [id])
  book      Book?    @relation(fields: [bookId], references: [id])
  review    Review? @relation(fields: [reviewId], references: [id])
}


